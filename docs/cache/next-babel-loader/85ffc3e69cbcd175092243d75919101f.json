{"ast":null,"code":"// import PropTypes from \"prop-types\";\nimport dynamic from \"next/dynamic\";\nimport React from \"react\"; // export default class TypeFormForm extends React.Component {\n//   static propTypes = {\n//     height: PropTypes.number\n//   };\n//   static defaultProps = {\n//     height: 450\n//   };\n//   constructor(props) {\n//     super(props);\n//     this.state = { Form: null };\n//   }\n//   componentDidMount() {\n//     const Form = require(\"react-typeform-embed\").ReactTypeformEmbed;\n//     this.setState({ Form });\n//   }\n//   render() {\n//     const { height, ...formProps } = this.props;\n//     const { Form } = this.state;\n//     return (\n//       <div style={{ height, position: \"relative\" }}>\n//         {Form && <Form {...formProps} />}\n//       </div>\n//     );\n//   }\n// }\n\nvar ReactTypeformEmbed = dynamic(function () {\n  return import(\"react-typeform-embed/lib/ReactTypeformEmbed\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-typeform-embed/lib/ReactTypeformEmbed\")];\n    },\n    modules: [\"react-typeform-embed/lib/ReactTypeformEmbed\"]\n  }\n});\nexport default (function () {\n  return React.createElement(\"div\", null, React.createElement(ReactTypeformEmbed, {\n    url: \"https://josh407.typeform.com/to/hxjToF\",\n    style: {\n      width: \"100%\",\n      height: \"500px\",\n      position: \"relative\"\n    },\n    hideHeaders: true,\n    hideFooter: true,\n    opacity: 50\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}