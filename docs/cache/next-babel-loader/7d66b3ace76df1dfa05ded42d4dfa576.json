{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault2 = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault2(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault2(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault2(require(\"@babel/runtime-corejs2/helpers/esm/slicedToArray\"));\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports.default = exports.emitter = exports.ErrorComponent = exports.router = exports.dataManager = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\n\nvar _router2 = require(\"next/router\");\n\nvar _mitt = _interopRequireDefault(require(\"next-server/dist/lib/mitt\"));\n\nvar _utils = require(\"next-server/dist/lib/utils\");\n\nvar _pageLoader = _interopRequireDefault(require(\"./page-loader\"));\n\nvar envConfig = _interopRequireWildcard(require(\"next-server/config\"));\n\nvar _errorBoundary = require(\"./error-boundary\");\n\nvar _loadable = _interopRequireDefault(require(\"next-server/dist/lib/loadable\"));\n\nvar _headManagerContext = require(\"next-server/dist/lib/head-manager-context\");\n\nvar _dataManagerContext = require(\"next-server/dist/lib/data-manager-context\");\n\nvar _routerContext = require(\"next-server/dist/lib/router-context\");\n\nvar _dataManager = require(\"next-server/dist/lib/data-manager\"); // Polyfill Promise globally\n// This is needed because Webpack's dynamic loading(common chunks) code\n// depends on Promise.\n// So, we need to polyfill it.\n// See: https://webpack.js.org/guides/code-splitting/#dynamic-imports\n\n\nif (!window.Promise) {\n  window.Promise = _promise.default;\n}\n\nvar data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nvar props = data.props,\n    err = data.err,\n    page = data.page,\n    query = data.query,\n    buildId = data.buildId,\n    dynamicBuildId = data.dynamicBuildId,\n    assetPrefix = data.assetPrefix,\n    runtimeConfig = data.runtimeConfig,\n    dynamicIds = data.dynamicIds;\nvar d = JSON.parse(window.__NEXT_DATA__.dataManager);\nvar dataManager = new _dataManager.DataManager(d);\nexports.dataManager = dataManager;\nvar prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n\n__webpack_public_path__ = \"\".concat(prefix, \"/_next/\"); //eslint-disable-line\n// Initialize next/config with the environment configuration\n\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig\n});\nvar asPath = (0, _utils.getURL)();\nvar pageLoader = new _pageLoader.default(buildId, prefix);\n\nvar register = function register(_ref) {\n  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n      r = _ref2[0],\n      f = _ref2[1];\n\n  return pageLoader.registerPage(r, f);\n};\n\nif (window.__NEXT_P) {\n  window.__NEXT_P.map(register);\n}\n\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nvar headManager = new _headManager.default();\nvar appContainer = document.getElementById('__next');\nvar lastAppProps;\nvar webpackHMR;\nvar router;\nexports.router = router;\nvar ErrorComponent;\nexports.ErrorComponent = ErrorComponent;\nvar Component;\nvar App;\nvar emitter = (0, _mitt.default)();\nexports.emitter = emitter;\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee() {\n    var _ref4,\n        passedWebpackHMR,\n        initialErr,\n        _require,\n        isValidElementType,\n        _args = arguments;\n\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref4 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, passedWebpackHMR = _ref4.webpackHMR;\n\n            // This makes sure this specific line is removed in production\n            if (process.env.NODE_ENV === 'development') {\n              webpackHMR = passedWebpackHMR;\n            }\n\n            _context.next = 4;\n            return pageLoader.loadPage('/_app');\n\n          case 4:\n            App = _context.sent;\n            initialErr = err;\n            _context.prev = 6;\n            _context.next = 9;\n            return pageLoader.loadPage(page);\n\n          case 9:\n            Component = _context.sent;\n\n            if (!(process.env.NODE_ENV !== 'production')) {\n              _context.next = 14;\n              break;\n            }\n\n            _require = require('react-is'), isValidElementType = _require.isValidElementType;\n\n            if (isValidElementType(Component)) {\n              _context.next = 14;\n              break;\n            }\n\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(page, \"\\\"\"));\n\n          case 14:\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](6);\n            // This catches errors like throwing in the top level of a module\n            initialErr = _context.t0;\n\n          case 19:\n            _context.next = 21;\n            return _loadable.default.preloadReady(dynamicIds || []);\n\n          case 21:\n            if (dynamicBuildId === true) {\n              pageLoader.onDynamicBuildId();\n            }\n\n            exports.router = router = (0, _router2.createRouter)(page, query, asPath, {\n              initialProps: props,\n              pageLoader: pageLoader,\n              App: App,\n              Component: Component,\n              err: initialErr\n            });\n            router.subscribe(function (_ref5) {\n              var App = _ref5.App,\n                  Component = _ref5.Component,\n                  props = _ref5.props,\n                  err = _ref5.err;\n              render({\n                App: App,\n                Component: Component,\n                props: props,\n                err: err,\n                emitter: emitter\n              });\n            });\n            render({\n              App: App,\n              Component: Component,\n              props: props,\n              err: initialErr,\n              emitter: emitter\n            });\n            return _context.abrupt(\"return\", emitter);\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 16]]);\n  }));\n\n  return function _default() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.default = _default;\n\nfunction render(_x) {\n  return _render.apply(this, arguments);\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\n\n\nfunction _render() {\n  _render = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee2(props) {\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!props.err) {\n              _context2.next = 4;\n              break;\n            }\n\n            _context2.next = 3;\n            return renderError(props);\n\n          case 3:\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            _context2.prev = 4;\n            _context2.next = 7;\n            return doRender(props);\n\n          case 7:\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](4);\n            _context2.next = 13;\n            return renderError((0, _extends2.default)({}, props, {\n              err: _context2.t0\n            }));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[4, 9]]);\n  }));\n  return _render.apply(this, arguments);\n}\n\nfunction renderError(_x2) {\n  return _renderError.apply(this, arguments);\n}\n\nfunction _renderError() {\n  _renderError = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee3(props) {\n    var App, err, initProps;\n    return _regenerator.default.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            App = props.App, err = props.err;\n\n            if (!(process.env.NODE_ENV !== 'production')) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", webpackHMR.reportRuntimeError(webpackHMR.prepareError(err)));\n\n          case 3:\n            // Make sure we log the error to the console, otherwise users can't track down issues.\n            console.error(err);\n            _context3.next = 6;\n            return pageLoader.loadPage('/_error');\n\n          case 6:\n            exports.ErrorComponent = ErrorComponent = _context3.sent;\n\n            if (!props.props) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.t0 = props.props;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.next = 13;\n            return (0, _utils.loadGetInitialProps)(App, {\n              Component: ErrorComponent,\n              router: router,\n              ctx: {\n                err: err,\n                pathname: page,\n                query: query,\n                asPath: asPath\n              }\n            });\n\n          case 13:\n            _context3.t0 = _context3.sent;\n\n          case 14:\n            initProps = _context3.t0;\n            _context3.next = 17;\n            return doRender((0, _extends2.default)({}, props, {\n              err: err,\n              Component: ErrorComponent,\n              props: initProps\n            }));\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _renderError.apply(this, arguments);\n}\n\nvar isInitialRender = true;\n\nfunction renderReactElement(reactEl, domEl) {\n  // The check for `.hydrate` is there to support React alternatives like preact\n  if (isInitialRender && typeof _reactDom.default.hydrate === 'function') {\n    _reactDom.default.hydrate(reactEl, domEl);\n\n    isInitialRender = false;\n  } else {\n    _reactDom.default.render(reactEl, domEl);\n  }\n}\n\nfunction doRender(_x3) {\n  return _doRender.apply(this, arguments);\n}\n\nfunction _doRender() {\n  _doRender = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee4(_ref6) {\n    var App, Component, props, err, _router, pathname, _query, _asPath, appProps;\n\n    return _regenerator.default.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            App = _ref6.App, Component = _ref6.Component, props = _ref6.props, err = _ref6.err;\n\n            if (!(!props && Component && Component !== ErrorComponent && lastAppProps.Component === ErrorComponent)) {\n              _context4.next = 6;\n              break;\n            }\n\n            _router = router, pathname = _router.pathname, _query = _router.query, _asPath = _router.asPath;\n            _context4.next = 5;\n            return (0, _utils.loadGetInitialProps)(App, {\n              Component: Component,\n              router: router,\n              ctx: {\n                err: err,\n                pathname: pathname,\n                query: _query,\n                asPath: _asPath\n              }\n            });\n\n          case 5:\n            props = _context4.sent;\n\n          case 6:\n            Component = Component || lastAppProps.Component;\n            props = props || lastAppProps.props;\n            appProps = (0, _extends2.default)({\n              Component: Component,\n              err: err,\n              router: router\n            }, props); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n\n            lastAppProps = appProps;\n            emitter.emit('before-reactdom-render', {\n              Component: Component,\n              ErrorComponent: ErrorComponent,\n              appProps: appProps\n            }); // In development runtime errors are caught by react-error-overlay.\n\n            if (process.env.NODE_ENV === 'development') {\n              renderReactElement(_react.default.createElement(_react.Suspense, {\n                fallback: _react.default.createElement(\"div\", null, \"Loading...\")\n              }, _react.default.createElement(_routerContext.RouterContext.Provider, {\n                value: (0, _router2.makePublicRouterInstance)(router)\n              }, _react.default.createElement(_dataManagerContext.DataManagerContext.Provider, {\n                value: dataManager\n              }, _react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n                value: headManager.updateHead\n              }, _react.default.createElement(App, appProps))))), appContainer);\n            } else {\n              // In production we catch runtime errors using componentDidCatch which will trigger renderError.\n              renderReactElement(_react.default.createElement(_errorBoundary.ErrorBoundary, {\n                fn: function fn(error) {\n                  return renderError({\n                    App: App,\n                    err: error\n                  }).catch(function (err) {\n                    return console.error('Error rendering page: ', err);\n                  });\n                }\n              }, _react.default.createElement(_react.Suspense, {\n                fallback: _react.default.createElement(\"div\", null, \"Loading...\")\n              }, _react.default.createElement(_routerContext.RouterContext.Provider, {\n                value: (0, _router2.makePublicRouterInstance)(router)\n              }, _react.default.createElement(_dataManagerContext.DataManagerContext.Provider, {\n                value: dataManager\n              }, _react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n                value: headManager.updateHead\n              }, _react.default.createElement(App, appProps)))))), appContainer);\n            }\n\n            emitter.emit('after-reactdom-render', {\n              Component: Component,\n              ErrorComponent: ErrorComponent,\n              appProps: appProps\n            });\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _doRender.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}